# /home/dylan/code/work/labelwall/docker-compose.yml
# version: '3.8' # Removed obsolete version line

services:
  neo4j:
    image: neo4j:5 # 使用 Neo4j 5.x 官方镜像
    container_name: labelwall-neo4j-test
    ports:
      - "7474:7474" # Neo4j Browser HTTP
      - "7687:7687" # Bolt protocol
    environment:
      # 设置默认用户名 neo4j，密码 password (仅用于测试环境)
      # 首次启动后，你可能需要在浏览器 (http://localhost:7474) 修改密码
      NEO4J_AUTH: neo4j/password
      # 接受许可协议 (对于较新版本是必需的)
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      # 可选：禁用初始密码修改强制要求 (方便测试)
      # NEO4J_dbms_security_auth__minimum__password__length: 1
      # NEO4J_dbms_security_auth__enabled: false # 完全禁用认证 (不推荐，除非有特殊原因)
    # volumes:
      # 可选：如果你希望在 docker-compose down/up 之间持久化数据，请取消注释以下行
      # - neo4j_data:/data
      # - neo4j_logs:/logs
      # - neo4j_import:/var/lib/neo4j/import
      # - neo4j_plugins:/var/lib/neo4j/plugins
      # - neo4j_conf:/var/lib/neo4j/conf
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7 # 使用 Redis 7.x 官方镜像
    container_name: labelwall-redis-test
    ports:
      - "6381:6379" # Map container port 6379 to host port 6380
    # 可选：如果你希望在 docker-compose down/up 之间持久化数据
    # volumes:
    #  - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

# 可选：定义命名卷以持久化数据
# volumes:
#   neo4j_data:
#   neo4j_logs:
#   neo4j_import:
#   neo4j_plugins:
#   neo4j_conf:
#   redis_data: 