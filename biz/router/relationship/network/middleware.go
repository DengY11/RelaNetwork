// Code generated by hertz generator.
//
// middleware.go - 关系网络服务中间件配置文件
//
// 使用说明:
// 1. 本文件中的函数对应不同路由级别和API端点的中间件配置
// 2. 每个函数需要返回[]app.HandlerFunc类型的中间件列表
// 3. 中间件执行顺序: 路由层级从外到内，父路由中间件先于子路由执行
//
// 中间件函数与路由对应关系:
// - rootMw():        所有请求的根中间件
// - _apiMw():        /api/* 路径的中间件
// - _v1Mw():         /api/v1/* 路径的中间件
//
// 节点相关路由中间件:
// - _nodesMw():      /api/v1/nodes 端点组中间件
// - _createnodeMw(): POST /api/v1/nodes 创建节点
// - _searchnodesMw(): GET /api/v1/nodes/search 搜索节点
// - _getnodeMw():    GET /api/v1/nodes/:id 获取单个节点
// - _updatenodeMw(): PUT /api/v1/nodes/:id 更新节点
// - _deletenodeMw(): DELETE /api/v1/nodes/:id 删除节点
// - _getnoderelationsMw(): GET /api/v1/nodes/:node_id/relations 获取节点关系
//
// 关系相关路由中间件:
// - _relationsMw():     /api/v1/relations 端点组中间件
// - _createrelationMw(): POST /api/v1/relations 创建关系
// - _getrelationMw():   GET /api/v1/relations/:id 获取单个关系
// - _updaterelationMw(): PUT /api/v1/relations/:id 更新关系
// - _deleterelationMw(): DELETE /api/v1/relations/:id 删除关系
//
// 网络查询相关路由中间件:
// - _getnetworkMw():   GET /api/v1/network 查询网络
// - _getpathMw():      GET /api/v1/path 查询路径
//
// 中间件编写示例:
//
//	func AuthMiddleware() app.HandlerFunc {
//	    return func(ctx context.Context, c *app.RequestContext) {
//	        // 前置逻辑: 检查认证
//	        token := c.Request.Header.Get("Authorization")
//	        if token == "" {
//	            c.AbortWithStatus(401)
//	            return
//	        }
//
//	        // 执行下一个中间件
//	        c.Next(ctx)
//
//	        // 后置逻辑(可选)
//	    }
//	}
//
//	func rootMw() []app.HandlerFunc {
//	    return []app.HandlerFunc{
//	        LoggerMiddleware(),
//	        RecoveryMiddleware(),
//	    }
//	}
package network

import (
	"github.com/cloudwego/hertz/pkg/app"
)

func rootMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _apiMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _v1Mw() []app.HandlerFunc {
	// your code...
	return nil
}

func _getnetworkMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _getpathMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _nodeMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _getnodedetailMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _nodesMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _createnodeMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _deletenodeMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _getnodeMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _updatenodeMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _node_idMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _getnoderelationsMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _relationsMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _createrelationMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _deleterelationMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _getrelationMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _updaterelationMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _nodes0Mw() []app.HandlerFunc {
	// your code...
	return nil
}

func _searchnodesMw() []app.HandlerFunc {
	// your code...
	return nil
}
